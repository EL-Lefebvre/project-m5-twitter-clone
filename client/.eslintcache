[{"C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\CurrentUserProvider.js":"1","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\App.js":"2","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\constants.js":"3","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Sidebar.js":"4","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\index.js":"5","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\GlobalStyles.js":"6","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Bookmarks.js":"7","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Notifications.js":"8","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Profile\\Profile.js":"9","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\logo.js":"10","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Tweets\\TweetDetails.js":"11","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Tweets\\SmallTweet.js":"12","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Tweets\\TweetActions.js":"13","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Tweets\\BigTweet.js":"14","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\CurrentUserContext.js":"15","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Tweets\\TweetIcons\\Retweet.js":"16","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Home\\TextBox.js":"17","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Home\\HomeFeed.js":"18","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Error.js":"19"},{"size":3647,"mtime":1611632861944,"results":"20","hashOfConfig":"21"},{"size":1856,"mtime":1611592866509,"results":"22","hashOfConfig":"21"},{"size":181,"mtime":1611263609434,"results":"23","hashOfConfig":"21"},{"size":2284,"mtime":1611582453566,"results":"24","hashOfConfig":"21"},{"size":560,"mtime":1611165867388,"results":"25","hashOfConfig":"21"},{"size":173,"mtime":1611110435989,"results":"26","hashOfConfig":"21"},{"size":125,"mtime":1610997652399,"results":"27","hashOfConfig":"21"},{"size":137,"mtime":1610997646220,"results":"28","hashOfConfig":"21"},{"size":3733,"mtime":1611582104962,"results":"29","hashOfConfig":"21"},{"size":3342,"mtime":1611000879609,"results":"30","hashOfConfig":"21"},{"size":1323,"mtime":1611542077649,"results":"31","hashOfConfig":"21"},{"size":4476,"mtime":1611633147608,"results":"32","hashOfConfig":"21"},{"size":941,"mtime":1611583587156,"results":"33","hashOfConfig":"21"},{"size":3164,"mtime":1611537222218,"results":"34","hashOfConfig":"21"},{"size":98,"mtime":1611166013782,"results":"35","hashOfConfig":"21"},{"size":429,"mtime":1611583837267,"results":"36","hashOfConfig":"21"},{"size":3268,"mtime":1611633106117,"results":"37","hashOfConfig":"21"},{"size":2434,"mtime":1611632746794,"results":"38","hashOfConfig":"21"},{"size":830,"mtime":1611593167164,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1rrhfc3",{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\CurrentUserProvider.js",["86","87","88","89","90","91","92"],"C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\App.js",["93","94","95","96","97"],"C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\constants.js",[],["98","99"],"C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Sidebar.js",["100"],"import React, { useContext } from \"react\";\r\nimport Logo from \"../logo\";\r\nimport styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { COLORS } from \"../constants\";\r\nimport { BiHomeAlt } from \"react-icons/bi\";\r\nimport { IoIosNotificationsOutline as Notif } from \"react-icons/io\";\r\nimport { CurrentUserContext } from \"./CurrentUserContext\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\nimport { BsBookmark } from \"react-icons/bs\";\r\n\r\nconst SideBar = () => {\r\n\r\n  const { mainUserHandle } = useContext(CurrentUserContext);\r\n\r\n\r\n  return (\r\n    <Menu>\r\n      <Logo />\r\n\r\n      <MainMenu>\r\n        <Navig to=\"/\">\r\n          <ItemDiv>\r\n            <BiHomeAlt /> <Name> Home </Name>\r\n          </ItemDiv>\r\n        </Navig>\r\n       <Navig to={ `/profile/${mainUserHandle}`}>\r\n    \r\n          <ItemDiv>\r\n            <CgProfile />\r\n            <Name>Profile </Name>\r\n          </ItemDiv>\r\n        </Navig>\r\n        <Navig to=\"/notifications\">\r\n          <ItemDiv>\r\n            <Notif />\r\n            <Name> Notifications </Name>\r\n          </ItemDiv>\r\n        </Navig>\r\n        <Navig to=\"/bookmarks\">\r\n          <ItemDiv>\r\n            {\" \"}\r\n            <BsBookmark />\r\n            <Name>Bookmarks </Name>\r\n          </ItemDiv>\r\n        </Navig>\r\n        <Button>Meow</Button>\r\n      </MainMenu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst Menu = styled.div`\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  width: 20%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst MainMenu = styled.div`\r\n  list-style-type: none;\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\nconst ItemDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: ${COLORS.primary};\r\n  color: white;\r\n  border-radius: 10px;\r\n  width: 100px;\r\n  height: 30px;\r\n  border: none;\r\n  margin-top: 15px;\r\n`;\r\nconst Navig = styled(NavLink)`\r\n  text-decoration: none;\r\n  font-weight: bolder;\r\n  width: 150px;\r\n  color: black;\r\n  padding-left: 15px;\r\n\r\n  &:hover {\r\n    color: ${COLORS.primary};\r\n    background-color: ${COLORS.lightPurple};\r\n    border-radius: 50px;\r\n  }\r\n`;\r\nconst Name = styled.h5`\r\n  padding-left: 10px;\r\n`;\r\nconst Home = styled(BiHomeAlt)``;\r\nexport default SideBar;\r\n",["101","102"],"C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\index.js",[],"C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\GlobalStyles.js",[],"C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Bookmarks.js",[],"C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Notifications.js",[],"C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Profile\\Profile.js",["103","104","105","106","107","108","109"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { IoLocationOutline as Location } from \"react-icons/io5\";\r\nimport { AiTwotoneCalendar as Calendar } from \"react-icons/ai\";\r\nimport moment from \"moment\";\r\nimport { CurrentUserContext } from \"../CurrentUserContext\";\r\n\r\nimport SmallTweet from \"../Tweets/SmallTweet\";\r\n\r\nconst Profile = () => {\r\n  const history = useHistory();\r\n  const [boolUser, setBoolUser] = useState(false);\r\n  const [handleTweet, setHandleTweet] = useState();\r\n\r\n  // const [currentHandle, setCurrentHandle] = useState(\"\");\r\n  const {\r\n    currentUser,\r\n    homeFeed,\r\n    status,\r\n    setStatus,\r\n    profileUrl,\r\n    setProfileUrl,\r\n    currentProfileFeed,\r\n    setCurrentUserHandle,\r\n    currentUserData,\r\n  } = useContext(CurrentUserContext);\r\n  const { handle } = useParams();\r\n  setCurrentUserHandle(handle);\r\n  setProfileUrl(true);\r\n\r\n  const handleFeed = (id) => {\r\n    setHandleTweet(id);\r\n    history.push(`/tweet/${id}`);\r\n  };\r\n\r\n  if (currentUser === \"\") {\r\n    return <div>Loading</div>;\r\n  }\r\n  if (status === \"loading\") {\r\n    return <div>Loading</div>;\r\n  }\r\n\r\n  return currentUserData ? (\r\n    <Wrapper>\r\n      <div>\r\n        <Banner src={currentUserData.bannerSrc} />\r\n        <Avatar src={currentUserData.avatarSrc} />\r\n      </div>\r\n      <ProfileInfo>\r\n        <Handle>\r\n          <Span>{currentUserData.displayName}</Span>\r\n          {`@ ${currentUserData.handle}`}\r\n        </Handle>\r\n        <Date>\r\n          <List>\r\n            <Location /> {currentUserData.location}{\" \"}\r\n          </List>\r\n          <List>\r\n            <Calendar /> Joined{\" \"}\r\n            {moment(currentUserData.joined).format(\"MM YYYY\")}\r\n          </List>\r\n        </Date>\r\n        <Follow>\r\n          <Item>\r\n            <Span>{currentUserData.numFollowers}</Span> Followers{\" \"}\r\n          </Item>\r\n\r\n          <Item>\r\n            <Span>{currentUserData.numFollowing}</Span> Following{\" \"}\r\n          </Item>\r\n        </Follow>\r\n      </ProfileInfo>\r\n      <ProfileMenu>\r\n        <MenuItems>Menu</MenuItems>\r\n        <MenuItems>Media</MenuItems>\r\n        <MenuItems>Likes</MenuItems>\r\n      </ProfileMenu>\r\n      <Feed>\r\n        {currentProfileFeed && (\r\n          <SmallTweet\r\n            handleFeed={handleFeed}\r\n            tweetArray={Object.values(currentProfileFeed)}\r\n            status={status}\r\n            profileUrl={profileUrl}\r\n            setProfileUrl={setProfileUrl}\r\n          />\r\n        )}\r\n      </Feed>\r\n    </Wrapper>\r\n  ) : (\r\n    <div>Loading</div>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  border-left: 1px lightgray solid;\r\n  border-right: 1px lightgray solid;\r\n  width: 100%;\r\n  flex-direction: column;\r\n`;\r\nconst ProfileInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 200px;\r\n`;\r\nconst ProfileMenu = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`;\r\nconst Date = styled.div`\r\n  display: flex;\r\n`;\r\nconst Handle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Follow = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  margin: 10px;\r\n`;\r\nconst Span = styled.span`\r\n  font-weight: bolder;\r\n  padding-right: 5px;\r\n`;\r\nconst Feed = styled.div``;\r\nconst Tweet = styled.div``;\r\nconst Banner = styled.img`\r\n  width: 100%;\r\n  height: 200px;\r\n`;\r\nconst Avatar = styled.img`\r\n  border-radius: 100px;\r\n  height: 100px;\r\n  width: 100px;\r\n  margin-top: -40px;\r\n  z-index: 2;\r\n\r\n  border: 5px solid white;\r\n`;\r\nconst List = styled.h4`\r\n  padding: 5px;\r\n`;\r\nconst MenuItems = styled.h3`\r\n  padding-right: 40px;\r\n`;\r\nconst Item = styled.p`\r\n  padding: 5px;\r\n`;\r\nexport default Profile;\r\n","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\logo.js",[],"C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Tweets\\TweetDetails.js",["110","111","112","113","114"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CurrentUserContext } from \"../CurrentUserContext\";\r\nimport BigTweet from \"./BigTweet\";\r\n\r\nconst TweetDetails = () => {\r\n  const { tweetId } = useParams();\r\n  console.log(tweetId);\r\n  const [singleTweetId, setSingleTweetId] = useState(\"\");\r\n  const {\r\n    homeFeed,\r\n    setStatus,\r\n    status,\r\n    currentTweet,\r\n    setCurrentTweet,\r\n    numRetweet,\r\n    setNumRetweet,\r\n  } = useContext(CurrentUserContext);\r\n\r\n  const getSingleTweet = async () => {\r\n    try {\r\n      const fetched = await fetch(`/api/tweet/${tweetId}`)\r\n        .then((data) => data.json())\r\n        .then((data) => data.tweet);\r\n      setSingleTweetId(fetched);\r\n    } catch (err) {\r\n      console.log(\"Error 404\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tweetId) {\r\n      getSingleTweet();\r\n    }\r\n  }, [tweetId]);\r\n\r\n  fetch(`/api/tweet/${tweetId}/retweet`)\r\n    .then((data) => data.json())\r\n    .then((data) => data.tweet)\r\n    .then((data) => setNumRetweet(data));\r\nconsole.log(numRetweet)\r\n  console.log(singleTweetId);\r\n  if (status === \"loading\") {\r\n    return <div>Loading</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <BigTweet singleTweetId={singleTweetId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetDetails;\r\n","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Tweets\\SmallTweet.js",["115","116","117","118","119","120","121"],"import React, { useRef, useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CurrentUserContext } from \"../CurrentUserContext\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport { COLORS } from \"../../constants\";\r\nimport TweetActions from \"./TweetActions\";\r\n\r\nconst SmallTweet = ({ tweetArray, handleFeed, status, homeFeed }) => {\r\n  const { setCurrentTweet } = useContext(CurrentUserContext);\r\n  const history = useHistory();\r\n  const [toggleValue, setToggleValue] = useState(false);\r\n  const [updatedArray, setUpdatedArray] = useState([]);\r\n  const newArray = [];\r\n  const currentFocus = useRef();\r\n  if (status === \"loading\") {\r\n    return <div>Loading</div>;\r\n  }\r\n  const historyPath = history.location.pathname.includes(\"profile\");\r\n\r\n\r\n\r\nconsole.log(tweetArray)\r\n  return  (\r\n    tweetArray.map((feed, feedId) => {\r\n      return (\r\n        <Wrapper\r\n          id=\"wrapper\"\r\n          key={feedId}\r\n          setCurrentTweet={setCurrentTweet(`${feed.id}`)}\r\n          tabIndex=\"1\"\r\n          onClick={() => {\r\n            handleFeed(`${feed.id}`);\r\n          }}\r\n          onKeyPress={() => {\r\n            handleFeed(`${feed.id}`);\r\n          }}\r\n        >\r\n          <Feed>\r\n            <AvatarDiv>\r\n              <ProfilePic src={feed.author.avatarSrc} />\r\n            </AvatarDiv>\r\n            <InfoDiv>\r\n              <HandleDiv>\r\n                <div\r\n                  ref={currentFocus}\r\n                  tabIndex=\"1\"\r\n                  onClick={(e) => {\r\n                    e.cancelBubble = true;\r\n                    if (e.stopPropagation) {\r\n                      e.stopPropagation();\r\n                      if (historyPath) {\r\n                        history.replace(`${feed.author.handle}`);\r\n                      } else {\r\n                        history.replace(`profile/${feed.author.handle}`);\r\n                      }\r\n                    }\r\n                  }}\r\n                  onKeyPress={(e) => {\r\n                    e.cancelBubble = true;\r\n                    if (e.stopPropagation) {\r\n                      e.stopPropagation();\r\n\r\n                      if (historyPath) {\r\n                        history.replace(`${feed.author.handle}`);\r\n                      } else {\r\n                        history.replace(`profile/${feed.author.handle}`);\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  {feed.isRetweeted}\r\n                  <ProfileLink>{feed.author.displayName} </ProfileLink>\r\n                </div>\r\n                <TextPale>{`@ ${feed.author.handle} `}</TextPale>\r\n                <TextPale>\r\n                  {\" \"}\r\n                  -{moment(feed.timestamp).format(\"MMM YYYY\")}\r\n                </TextPale>\r\n              </HandleDiv>\r\n              <Status>{feed.status} </Status>\r\n            </InfoDiv>\r\n          </Feed>\r\n\r\n          <TweetPicWrapper>\r\n            {feed.media.map((med) => {\r\n              if (med.url !== \"\") {\r\n                return <TweetPic src={med.url} />;\r\n              }\r\n            })}\r\n          </TweetPicWrapper>\r\n          <TweetActions\r\n            numRetweets={feed.numRetweets}\r\n            isRetweeted={feed.isRetweeted}\r\n            numLikes={feed.numLikes}\r\n            isLiked={feed.isLiked}\r\n          />\r\n        </Wrapper>\r\n      );\r\n    })\r\n  ) \r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  border: 1px solid lightgray;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: none;\r\n  border-left: none;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Feed = styled.div`\r\n  display: flex;\r\n`;\r\nconst AvatarDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n`;\r\nconst InfoDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst HandleDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Status = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n`;\r\nconst TweetPicWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst ProfileLink = styled.a`\r\n  font-weight: bolder;\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TextPale = styled.p`\r\n  color: ${COLORS.secondary};\r\n`;\r\n\r\nconst ProfilePic = styled.img`\r\n  height: 50px;\r\n  width: 50px;\r\n  border-radius: 100px;\r\n  padding: 10px;\r\n`;\r\nconst TweetPic = styled.img`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  max-height: 400px;\r\n  width: 70%;\r\n`;\r\nexport default SmallTweet;\r\n","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Tweets\\TweetActions.js",["122","123","124","125"],"C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Tweets\\BigTweet.js",[],"C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\CurrentUserContext.js",[],"C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Tweets\\TweetIcons\\Retweet.js",["126","127"],"import React, { useEffect, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AiOutlineRetweet as RetweetIcon } from \"react-icons/ai\";\r\nconst Retweet = ({numRetweets, isRetweeted}) => {\r\n \r\n\r\n    return (\r\n      <Wrapper>\r\n           <RetweetIcon />\r\n       {numRetweets}\r\n       \r\n    \r\n      </Wrapper>\r\n    );\r\n  };\r\n  \r\nconst Wrapper = styled.div`\r\ndisplay: flex;\r\n\r\n`;\r\n\r\n\r\nexport default Retweet;","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Home\\TextBox.js",["128","129","130"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { COLORS } from \"../../constants\";\r\nimport { CurrentUserContext } from \"../CurrentUserContext\";\r\nconst MAX_lENGTH = 280;\r\n\r\nconst TextBox = ({\r\n  wordCount,\r\n  setWordCount,\r\n  charCount,\r\n  setCharCount,\r\n  colorChange,\r\n  setColorChange,\r\n  addNewTweet,\r\n\r\n}) => {\r\n  const { mainUserHandle, currentUser } = useContext(CurrentUserContext);\r\n  const [toggle, setToggle] = useState(false);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleToggle = (e) => {\r\n    if (e.key === \"Backspace\") {\r\n      setToggle(true);\r\n    } else setToggle(false);\r\n  };\r\n  const updatedWordCount = (e) => {\r\n    const currentText = e.target.value;\r\n    setValue(currentText);\r\n    setCharCount(currentText.length);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!toggle) {\r\n      setWordCount(wordCount - 1);\r\n    } else {\r\n      setWordCount(wordCount + 1);\r\n    }\r\n\r\n    if (wordCount <= 55 && wordCount >= 0) {\r\n      setColorChange(\"#fdd501\");\r\n    } else if (wordCount <= 0) {\r\n      setColorChange(\"red\");\r\n    }\r\n  }, [charCount]);\r\n\r\n  const handleClick = (ev) => {\r\n    ev.preventDefault();\r\n    setValue(\"\");\r\n    fetch(\"/api/tweet\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ status: value }),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        const newTweetDetails = {\r\n          author: {\r\n            handle: `${currentUser.handle}`,\r\n            displayName: `${currentUser.displayName}`,\r\n            avatarSrc: `${currentUser.avatarSrc}`,\r\n          } ,\r\n          isLiked: false,\r\n          isRetweeted: false,\r\n          numLikes: 0,\r\n          numRetweets: 0,\r\n          ...data.tweet,\r\n          id: `${data.tweet.id}`,\r\n        };\r\n        addNewTweet(newTweetDetails);\r\n      });\r\n  };\r\n \r\n  return (\r\n    <Wrapper>\r\n      <TextDiv>\r\n        <TextArea\r\n          type=\"text\"\r\n          placeholder=\"What is happening?\"\r\n          onChange={updatedWordCount}\r\n          onKeyDown={handleToggle}\r\n          minLength=\"0\"\r\n          value={value}\r\n        />\r\n      </TextDiv>\r\n      <SubmitBar>\r\n        <Count style={{ color: `${colorChange}` }}>{wordCount}</Count>\r\n        <Button type=\"submit\" onClick={handleClick} setValue={setValue}>Meow</Button>\r\n      </SubmitBar>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst TextDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst TextArea = styled.textarea`\r\n  border: none;\r\n  padding: 10px;\r\n  width: 45vw;\r\n  height: 140px;\r\n  text-indent: 10px;\r\n  padding: none;\r\n`;\r\nconst SubmitBar = styled.div`\r\n  display: flex;\r\n  margin: 10px;\r\n  width: 95%;\r\n  height: 50px;\r\n  margin-top: 10px;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst Count = styled.h5`\r\n  color: lightgray;\r\n  text-shadow: lightslategray 1px 0 0.5px;\r\n  margin: 10px;\r\n  top: 0px;\r\n`;\r\nconst Button = styled.button`\r\n  background-color: ${COLORS.primary};\r\n  color: white;\r\n  border-radius: 10px;\r\n  width: 100px;\r\n  height: 20px;\r\n  border: none;\r\n  margin-top: 10px;\r\n`;\r\nexport default TextBox;\r\n","C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Home\\HomeFeed.js",["131","132","133","134","135","136","137"],"C:\\Users\\Elodie\\GitHub CB\\project-m5-twitter-clone\\client\\src\\components\\Error.js",[],{"ruleId":"138","severity":1,"message":"139","line":1,"column":38,"nodeType":"140","messageId":"141","endLine":1,"endColumn":48},{"ruleId":"138","severity":1,"message":"142","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":19},{"ruleId":"138","severity":1,"message":"143","line":19,"column":7,"nodeType":"140","messageId":"141","endLine":19,"endColumn":14},{"ruleId":"144","severity":1,"message":"145","line":38,"column":6,"nodeType":"146","endLine":38,"endColumn":8,"suggestions":"147"},{"ruleId":"144","severity":1,"message":"148","line":65,"column":6,"nodeType":"146","endLine":65,"endColumn":8,"suggestions":"149"},{"ruleId":"144","severity":1,"message":"150","line":90,"column":6,"nodeType":"146","endLine":90,"endColumn":25,"suggestions":"151"},{"ruleId":"144","severity":1,"message":"152","line":112,"column":6,"nodeType":"146","endLine":112,"endColumn":25,"suggestions":"153"},{"ruleId":"138","severity":1,"message":"154","line":1,"column":29,"nodeType":"140","messageId":"141","endLine":1,"endColumn":38},{"ruleId":"138","severity":1,"message":"155","line":11,"column":8,"nodeType":"140","messageId":"141","endLine":11,"endColumn":13},{"ruleId":"138","severity":1,"message":"156","line":20,"column":11,"nodeType":"140","messageId":"141","endLine":20,"endColumn":17},{"ruleId":"138","severity":1,"message":"143","line":21,"column":7,"nodeType":"140","messageId":"141","endLine":21,"endColumn":14},{"ruleId":"157","severity":1,"message":"158","line":30,"column":35,"nodeType":"159","endLine":30,"endColumn":47},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"138","severity":1,"message":"164","line":98,"column":7,"nodeType":"140","messageId":"141","endLine":98,"endColumn":11},{"ruleId":"160","replacedBy":"165"},{"ruleId":"162","replacedBy":"166"},{"ruleId":"138","severity":1,"message":"154","line":1,"column":39,"nodeType":"140","messageId":"141","endLine":1,"endColumn":48},{"ruleId":"138","severity":1,"message":"167","line":13,"column":10,"nodeType":"140","messageId":"141","endLine":13,"endColumn":18},{"ruleId":"138","severity":1,"message":"168","line":13,"column":20,"nodeType":"140","messageId":"141","endLine":13,"endColumn":31},{"ruleId":"138","severity":1,"message":"169","line":14,"column":10,"nodeType":"140","messageId":"141","endLine":14,"endColumn":21},{"ruleId":"138","severity":1,"message":"170","line":19,"column":5,"nodeType":"140","messageId":"141","endLine":19,"endColumn":13},{"ruleId":"138","severity":1,"message":"171","line":21,"column":5,"nodeType":"140","messageId":"141","endLine":21,"endColumn":14},{"ruleId":"138","severity":1,"message":"172","line":129,"column":7,"nodeType":"140","messageId":"141","endLine":129,"endColumn":12},{"ruleId":"138","severity":1,"message":"170","line":11,"column":5,"nodeType":"140","messageId":"141","endLine":11,"endColumn":13},{"ruleId":"138","severity":1,"message":"171","line":12,"column":5,"nodeType":"140","messageId":"141","endLine":12,"endColumn":14},{"ruleId":"138","severity":1,"message":"173","line":14,"column":5,"nodeType":"140","messageId":"141","endLine":14,"endColumn":17},{"ruleId":"138","severity":1,"message":"174","line":15,"column":5,"nodeType":"140","messageId":"141","endLine":15,"endColumn":20},{"ruleId":"144","severity":1,"message":"175","line":35,"column":6,"nodeType":"146","endLine":35,"endColumn":15,"suggestions":"176"},{"ruleId":"138","severity":1,"message":"154","line":1,"column":47,"nodeType":"140","messageId":"141","endLine":1,"endColumn":56},{"ruleId":"138","severity":1,"message":"177","line":12,"column":10,"nodeType":"140","messageId":"141","endLine":12,"endColumn":21},{"ruleId":"138","severity":1,"message":"178","line":12,"column":23,"nodeType":"140","messageId":"141","endLine":12,"endColumn":37},{"ruleId":"138","severity":1,"message":"179","line":13,"column":10,"nodeType":"140","messageId":"141","endLine":13,"endColumn":22},{"ruleId":"138","severity":1,"message":"180","line":13,"column":24,"nodeType":"140","messageId":"141","endLine":13,"endColumn":39},{"ruleId":"138","severity":1,"message":"181","line":14,"column":9,"nodeType":"140","messageId":"141","endLine":14,"endColumn":17},{"ruleId":"182","severity":1,"message":"183","line":86,"column":35,"nodeType":"184","messageId":"185","endLine":86,"endColumn":37},{"ruleId":"138","severity":1,"message":"154","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"139","line":1,"column":28,"nodeType":"140","messageId":"141","endLine":1,"endColumn":38},{"ruleId":"138","severity":1,"message":"186","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":16},{"ruleId":"138","severity":1,"message":"187","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":28},{"ruleId":"138","severity":1,"message":"154","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"139","line":1,"column":28,"nodeType":"140","messageId":"141","endLine":1,"endColumn":38},{"ruleId":"138","severity":1,"message":"188","line":5,"column":7,"nodeType":"140","messageId":"141","endLine":5,"endColumn":17},{"ruleId":"138","severity":1,"message":"189","line":17,"column":11,"nodeType":"140","messageId":"141","endLine":17,"endColumn":25},{"ruleId":"144","severity":1,"message":"190","line":44,"column":6,"nodeType":"146","endLine":44,"endColumn":17,"suggestions":"191"},{"ruleId":"138","severity":1,"message":"154","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"192","line":11,"column":10,"nodeType":"140","messageId":"141","endLine":11,"endColumn":20},{"ruleId":"138","severity":1,"message":"169","line":13,"column":10,"nodeType":"140","messageId":"141","endLine":13,"endColumn":21},{"ruleId":"138","severity":1,"message":"193","line":16,"column":10,"nodeType":"140","messageId":"141","endLine":16,"endColumn":18},{"ruleId":"138","severity":1,"message":"194","line":16,"column":20,"nodeType":"140","messageId":"141","endLine":16,"endColumn":31},{"ruleId":"138","severity":1,"message":"195","line":17,"column":21,"nodeType":"140","messageId":"141","endLine":17,"endColumn":33},{"ruleId":"138","severity":1,"message":"171","line":18,"column":19,"nodeType":"140","messageId":"141","endLine":18,"endColumn":28},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.","ArrayExpression",["196"],"React Hook useEffect has a missing dependency: 'homeFeed'. Either include it or remove the dependency array.",["197"],"React Hook useEffect has a missing dependency: 'handleProfileFeed'. Either include it or remove the dependency array.",["198"],"React Hook useEffect has a missing dependency: 'handleInfo'. Either include it or remove the dependency array.",["199"],"'useEffect' is defined but never used.","'Error' is defined but never used.","'status' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["200"],"no-negated-in-lhs",["201"],"'Home' is assigned a value but never used.",["200"],["201"],"'boolUser' is assigned a value but never used.","'setBoolUser' is assigned a value but never used.","'handleTweet' is assigned a value but never used.","'homeFeed' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'Tweet' is assigned a value but never used.","'currentTweet' is assigned a value but never used.","'setCurrentTweet' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSingleTweet'. Either include it or remove the dependency array.",["202"],"'toggleValue' is assigned a value but never used.","'setToggleValue' is assigned a value but never used.","'updatedArray' is assigned a value but never used.","'setUpdatedArray' is assigned a value but never used.","'newArray' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'COLORS' is defined but never used.","'CurrentUserContext' is defined but never used.","'MAX_lENGTH' is assigned a value but never used.","'mainUserHandle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setColorChange', 'setWordCount', 'toggle', and 'wordCount'. Either include them or remove the dependency array. If 'setWordCount' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["203"],"'historyUrl' is assigned a value but never used.","'newTweet' is assigned a value but never used.","'setNewTweet' is assigned a value but never used.","'setDataTweet' is assigned a value but never used.",{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [currentUser]",{"range":"216","text":"217"},"Update the dependencies array to be: [homeFeed]",{"range":"218","text":"219"},"Update the dependencies array to be: [currentUserHandle, handleProfileFeed]",{"range":"220","text":"221"},"Update the dependencies array to be: [currentUserHandle, handleInfo]",{"range":"222","text":"223"},"Update the dependencies array to be: [getSingleTweet, tweetId]",{"range":"224","text":"225"},"Update the dependencies array to be: [charCount, setColorChange, setWordCount, toggle, wordCount]",{"range":"226","text":"227"},[1331,1333],"[currentUser]",[1944,1946],"[homeFeed]",[2522,2541],"[currentUserHandle, handleProfileFeed]",[3017,3036],"[currentUserHandle, handleInfo]",[903,912],"[getSingleTweet, tweetId]",[1121,1132],"[charCount, setColorChange, setWordCount, toggle, wordCount]"]